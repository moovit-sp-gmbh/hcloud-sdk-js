#!/bin/sh

# Exit if hook is triggered inside a GitHub workflow
if [ "$GITHUB_ACTIONS" = "true" ]; then
    echo "Running on GitHub Actions. Skipping pre-commit hook."
    exit 0
fi

check_format() {
  cd "$(git rev-parse --show-toplevel)"

  # Get a list of all files which belong to the next commit
  declare -a staged_files
  staged_files=($(git diff --cached --name-only))

  # Format everything
  make format
  if [ $? -ne 0 ]; then
    echo "Formatting failed"
    exit 1
  fi

  # Get a list of all files with unstaged changes after formatting
  declare -a unstaged_files
  unstaged_files=($(git diff --name-only))

  # Check if there are any files with staged changes which were not formatted
  for file in "${staged_files[@]}"; do
    if [[ " ${unstaged_files[@]} " =~ " ${file} " ]]; then
      echo "Formatting succeeded, but unformatted changes detected"
      exit 1
    fi
  done
}

# Prevent commit of changes which are not yet formatted.
check_format
if [ $? -ne 0 ]; then
  echo "Aborting commit\n  Please review, add unstaged changes to the commit and try again"
  exit 1
fi

exit 0
