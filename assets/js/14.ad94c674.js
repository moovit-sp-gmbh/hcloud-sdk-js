(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{280:function(t,e,r){"use strict";r.r(e);var o=r(13),n=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"getting-started"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting started")]),t._v(" "),e("p",[t._v("The first to start with is to create a new instance of hcloud.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('import HCloud from "hcloud-sdk"\n\nconst h = new HCloud({api: "https://dev.app.helmut.cloud"})\n')])])]),e("p",[t._v("from here on, the next step would be to authenticate against the platform by talking to the Identity Provider (refered as IDP in this document) to receive a Bearer "),e("a",{attrs:{href:"https://jwt.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JWT"),e("OutboundLink")],1),t._v(" token.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('import HCloud from "hcloud-sdk"\nimport { Token } from "hcloud-sdk/lib/IDP";\nimport { AxiosError } from "axios";\n\nconst h = new HCloud({api: "https://dev.app.helmut.cloud"})\n\ntry {\n    const token: Token = await h.IDP.authenticate("email", "password")\n    h.setAuthToken(token.token)\n} catch (err: AxiosError) {\n    console.log("err", err)\n}\n')])])]),e("p",[t._v("This token does not expire and must be used with every future request in order to authorize it. "),e("br"),t._v("\nWe set this token using HClouds setAuthToken method globally for future requests.")])])}),[],!1,null,null,null);e.default=n.exports}}]);