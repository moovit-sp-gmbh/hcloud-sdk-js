import {
    SearchFilter,
    SearchFilterBoolean,
    SearchFilterComparatorBoolean,
    SearchFilterComparatorDate,
    SearchFilterComparatorNumber,
    SearchFilterComparatorString,
    SearchFilterDate,
    SearchFilterMultiSelect,
    SearchFilterNumber,
    SearchFilterSelect,
    SearchFilterString,
    SearchFilterType,
    SearchFilterTypeahead,
} from "../../global/searchFilters";

const filters: SearchFilter[] = [
    {
        type: SearchFilterType.STRING,
        key: "name",
        name: "Name",
        description: "Filter organizations by name",
        comparator: SearchFilterComparatorString.IS,
        value: "",
    } as SearchFilterString,
    {
        type: SearchFilterType.SELECT,
        key: "product",
        name: "Available product",
        description: "Filter organizations by a product",
        comparator: SearchFilterComparatorString.IS,
        allowedValues: ["High5", "Fuse"],
        value: "High5",
    } as SearchFilterSelect,
    {
        type: SearchFilterType.MULTISELECT,
        key: "products",
        name: "Available products",
        description: "Filter organizations by zero or more products",
        comparator: SearchFilterComparatorString.IS,
        allowedValues: ["High5", "Fuse"],
        value: [],
    } as SearchFilterMultiSelect,
    {
        type: SearchFilterType.TYPEAHEAD,
        key: "products",
        name: "Available product",
        description: "Filter organizations by a product",
        comparator: SearchFilterComparatorString.IS,
        allowedValues: ["High5", "Fuse"],
        value: "",
    } as SearchFilterTypeahead,
    {
        type: SearchFilterType.NUMBER,
        key: "member_count",
        name: "Amount of Members",
        description: "Filter organizations by member count",
        comparator: SearchFilterComparatorNumber.GREATER_THAN_OR_EQUAL,
        value: 1,
    } as SearchFilterNumber,
    {
        type: SearchFilterType.DATE,
        key: "createDate",
        name: "Create Date",
        description: "Filter organizations by create date",
        comparator: SearchFilterComparatorDate.LESS_THAN_OR_EQUAL,
        value: Date.now(),
    } as SearchFilterDate,
    {
        type: SearchFilterType.BOOLEAN,
        key: "shared",
        name: "Shared",
        description: "Filter organizations by shared status",
        comparator: SearchFilterComparatorBoolean.IS,
        value: true,
    } as SearchFilterBoolean,
];

export { filters };
